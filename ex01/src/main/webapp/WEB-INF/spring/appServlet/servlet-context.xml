<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: 이 서블릿의 요청 처리 인프라를 정의함 -->

	<!-- Spring MVC @Controller 프로그래밍 모델을 활성화함 -->
	<annotation-driven />

	<!-- /resources/** 경로의 HTTP GET 요청을 처리하여 ${webappRoot}/resources 디렉터리에 있는 정적 리소스를 효율적으로 제공함 -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- @Controllers에서 선택한 뷰를 /WEB-INF/views 디렉터리의 .jsp 리소스로 해석함 -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>


	
	
	<!-- 파일 업로드를 처리하기 위한 CommonsMultipartResolver 설정 -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	
	    <!-- 기본 인코딩 설정 -->
		<beans:property name="defaultEncoding" value="utf-8"></beans:property>
		
        <!-- 전체 업로드 크기 제한 (10MB) -->
		<!-- 1024 * 1024 * 10 bytes 10MB -->
		<beans:property name="maxUploadSize" value="104857560"></beans:property>
		
        <!-- 파일당 업로드 크기 제한 (2MB) -->
		<!-- 1024 * 1024 * 2 bytes 2MB -->
		<beans:property name="maxUploadSizePerFile" value="2097152"></beans:property>
		
        <!-- 업로드 임시 디렉터리 설정 -->
		<beans:property name="uploadTempDir" value="file:/c:/upload/tmp"></beans:property>
		
		<!-- 메모리에 보관할 최대 크기 설정 (10MB) -->
		<beans:property name="maxInMemorySize" value="10485857"></beans:property>

	</beans:bean>


    <!-- org.zerock.controller" 패키지 내의 컴포넌트들을 스캔하여 빈으로 등록 -->
	<context:component-scan base-package="org.zerock.controller" />
	
	<!-- org.zerock.exception" 패키지 내의 컴포넌트들을 스캔하여 빈으로 등록 -->
	<context:component-scan base-package="org.zerock.exception" />
	
</beans:beans>
